{
  "name": "Personal Assistant Agent",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -960,
        -300
      ],
      "id": "ec95a2ee-f874-4a2b-a1b4-e3c62c977f3c",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "gm4ash96Dg6z4Snk",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "name": "emailHistoryAgent",
        "description": "Search USER_NAME’s email archive (Postgres + pgvector) for relevant messages.\nInput: { \"query\": \"<natural language search terms>\" }\nOutput: Up to 20 email snippets with text and received_at.",
        "workflowId": {
          "__rl": true,
          "value": "AYs6DdVhGkEsUFnZ",
          "mode": "list",
          "cachedResultName": "Email History Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ $('Extract WhatsApp Body').item.json.text }}"
          },
          "matchingColumns": [
            "query"
          ],
          "schema": [
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        -680,
        -140
      ],
      "id": "0f24e450-268a-4114-b554-576ba359340f",
      "name": "Email History Agent"
    },
    {
      "parameters": {
        "from": "+14155238886",
        "to": "+15559876543",
        "toWhatsapp": true,
        "message": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        -200,
        -480
      ],
      "id": "817ce51b-6e2c-4d43-8f86-cc6dde38a23f",
      "name": "Twilio",
      "credentials": {
        "twilioApi": {
          "id": "tg5fjlcyf6jfb5qb",
          "name": "Twilio account"
        }
      }
    },
    {
      "parameters": {
        "name": "Tavily",
        "description": "Run an internet search via the Tavily API and extract the top result.\nInput: { \"query\": \"<search keywords or question>\" }\nOutput: { url: string, content: string } of the first result.",
        "workflowId": {
          "__rl": true,
          "value": "8ugvD2EOzVnUV07J",
          "mode": "list",
          "cachedResultName": "Tavily"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        -100,
        -280
      ],
      "id": "e6acc79f-6edb-4cf7-8455-dc96d9f18a9c",
      "name": "Tavily"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Fetch a 5‑day weather forecast for a city.\nInput: { \"city\": \"<city name>\" }\nOutput: daily high/low and summary of conditions for the next five days.",
        "operation": "5DayForecast",
        "cityName": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('City', ``, 'string') }}",
        "language": "en"
      },
      "type": "n8n-nodes-base.openWeatherMapTool",
      "typeVersion": 1,
      "position": [
        -360,
        -140
      ],
      "id": "22a937d8-b36f-4ab4-9114-c1d3a5adab7c",
      "name": "OpenWeatherFuture",
      "credentials": {
        "openWeatherMapApi": {
          "id": "MbO9ZECGf78ImR1q",
          "name": "OpenWeatherMap account"
        }
      }
    },
    {
      "parameters": {
        "name": "calendarAgent",
        "description": "Manage USER_NAME’s Google Calendar by creating, listing, updating, or deleting events.\nCreate: requires start, end, summary (and optional attendees).\nGet: requires timeMin, timeMax.\nUpdate/Delete: requires eventId (plus new date/time or summary).\nInput: { \"query\": \"<user’s calendar request>\" }\nOutput: Confirmation or event list.",
        "workflowId": {
          "__rl": true,
          "value": "dYHoq8bBCUiGzWdC",
          "mode": "list",
          "cachedResultName": "Calendar Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('query', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        -520,
        -140
      ],
      "id": "5ea6d96c-eedc-4db5-b575-1a871a28497f",
      "name": "Calendar Agent"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Fetch current weather for a city.\nInput: { \"city\": \"<city name>\" }\nOutput: temperature, humidity, wind speed, and conditions in plain English.",
        "cityName": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('City', ``, 'string') }}",
        "language": "en"
      },
      "type": "n8n-nodes-base.openWeatherMapTool",
      "typeVersion": 1,
      "position": [
        -200,
        -140
      ],
      "id": "0f9056fd-aa49-4318-aebf-7092bb94e7ec",
      "name": "OpenWeatherCurrent",
      "credentials": {
        "openWeatherMapApi": {
          "id": "MbO9ZECGf78ImR1q",
          "name": "OpenWeatherMap account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=# ROLE\nYou are **USER_NAME’s personal assistant**.  \nYour job is to decide **which TOOL to call**, with what arguments, then relay the TOOL result back to the user in plain English.  \nNever answer from your own knowledge when a TOOL is available.\n\n# TOOLS CATALOG\n| name                | when_to_use                                               | args (JSON)                     |\n|---------------------|-----------------------------------------------------------|---------------------------------|\n| emailHistoryAgent   | user asks about past email content, counts, or dates      | { \"query\": \"<natural‑lang>\" }   |\n| calendarAgent       | create / read / update / delete calendar events           | { \"query\": \"<natural‑lang>\" }   |\n| Tavily              | any open‑web question not satisfied by other tools        | { \"query\": \"<search string>\" }  |\n| OpenWeatherCurrent  | “what’s the weather **now** in _city_?”                   | { \"city\": \"<city>\" }            |\n| OpenWeatherFuture   | “weather **this week / tomorrow** in _city_?”             | { \"city\": \"<city>\" }            |\n| Calculator          | any math you can’t do mentally                            | { \"expression\": \"<math expr>\" } |\n\n# CALL PROTOCOL\n1. **Think** (invisibly) about the user request.  \n2. **Respond** with **exactly one** line: <tool_call> {\"name\":\"<toolName>\",\"args\":{…}} </tool_call>\n  – Do NOT add commentary.  \n3. Wait for the tool_result event, then **summarize or answer** the user (max 1550 characters).\n\n# GLOBAL RULES\n* Today is {{ $now }} (timezone: America/Detroit).  \n* Be concise, friendly, and never expose internal IDs or JSON unless asked.  \n* If a location is missing for a weather request, ask for it.  \n* If no tool fits, apologize and say you can’t help.  \n\n# EXAMPLE\nUser: “Did I get any internship rejections last month?”  \nAssistant:  <tool_call>{\"name\":\"emailHistoryAgent\",\"args\":{\"query\":\"internship rejections March 2025\"}}</tool_call>\n\n# END"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -680,
        -480
      ],
      "id": "800159f9-9832-4a52-93fa-57b1af4fe673",
      "name": "USER_NAME's Personal Assistant"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "whatsapp",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1320,
        -480
      ],
      "id": "13e1d011-4879-4103-8aa2-50dba7fa5b2e",
      "name": "Twilio WhatsApp Inbound",
      "webhookId": "0e15fc61-04e7-4ddb-bfc6-5bd02ea02044",
      "notes": "Receives POSTed form‑data from Twilio on every inbound WhatsApp message."
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "aaa1b4bf-7721-4aa1-9101-46d6bf48cbe1",
              "name": "text",
              "value": "={{ $json.body.Body }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1020,
        -480
      ],
      "id": "11e65210-1242-44cd-9fe3-4614421398fc",
      "name": "Extract WhatsApp Body",
      "notes": "Copies body.Body → text for the assistant."
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Twilio WhatsApp Inbound').item.json.body.AccountSid }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -860,
        -220
      ],
      "id": "9cc93fe4-99c9-4770-b91d-5af0c2e14dda",
      "name": "Session Memory (per AccountSid)",
      "notes": "Buffer window to maintain chat context within a Twilio session."
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "USER_NAME's Personal Assistant",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Email History Agent": {
      "ai_tool": [
        [
          {
            "node": "USER_NAME's Personal Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Tavily": {
      "ai_tool": [
        [
          {
            "node": "USER_NAME's Personal Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenWeatherFuture": {
      "ai_tool": [
        [
          {
            "node": "USER_NAME's Personal Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Agent": {
      "ai_tool": [
        [
          {
            "node": "USER_NAME's Personal Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenWeatherCurrent": {
      "ai_tool": [
        [
          {
            "node": "USER_NAME's Personal Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "USER_NAME's Personal Assistant": {
      "main": [
        [
          {
            "node": "Twilio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Twilio WhatsApp Inbound": {
      "main": [
        [
          {
            "node": "Extract WhatsApp Body",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract WhatsApp Body": {
      "main": [
        [
          {
            "node": "USER_NAME's Personal Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Session Memory (per AccountSid)": {
      "ai_memory": [
        [
          {
            "node": "USER_NAME's Personal Assistant",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "saveExecutionProgress": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "929db633-36bc-47f2-8a8a-71ab9b782aac",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3e7d12e32cae4adeab65384469f612af395443af0e8c802155505c85232fd6fc"
  },
  "id": "yqf0g3XTtTc6IgSA",
  "tags": []
}
